% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cds.utils.R, R/cds_utils.R
\name{syn_utils}
\alias{syn_utils}
\alias{write_axt}
\alias{calculate_4dtv}
\alias{is.transversion}
\alias{is.transition}
\alias{pipe_4dtv}
\alias{calculate_kaks}
\alias{parse_Codeml}
\alias{make_codemlCtl}
\alias{pipe_kaks}
\alias{align_pep}
\alias{translate_cds}
\alias{pipe_alignCDS}
\alias{calc_selectionStats}
\alias{calc_kaks}
\alias{align_cds}
\alias{pairwise_4dtv}
\alias{calc_4dtv}
\title{selection utility functions}
\usage{
write_axt(cds.msa.fa, tmp.dir = NULL)

calculate_4dtv(cds.msaFile, GroupID = NULL, round2digits = 5,
  verbose = FALSE)

is.transversion(base1, base2)

is.transition(base1, base2)

pipe_4dtv(cdsFasta_file, proteinFasta_file = NULL,
  orthology_file = NULL, orthogroup_columnName = "V1",
  aligner = "mafft", pal2nal_path = NULL, n.cores = 6,
  process_nOrthogroups = NULL, clean_tempFiles = TRUE,
  write.output = TRUE, outDir = ".",
  file_name = basename(tempfile()), tempDir = file.path(outDir,
  basename(tempfile())), verbose = FALSE)

calculate_kaks(msaFile, file_prefix, nSpecies, clean_tempFiles = FALSE,
  problem_OrthosFile = NULL, cdml_ctlDir = ".", cdmlDir = ".",
  outDir = ".")

parse_Codeml(codeml.output.file)

make_codemlCtl(codeml.msa.file, codeml.output.file, codeml.cntr.file)

pipe_kaks(cdsFasta_file, proteinFasta_file = NULL,
  orthology_file = NULL, orthogroup_columnName = "V1",
  aligner = "mafft", pal2nal_path = NULL, calculate_4dtv = FALSE,
  n.cores = 6, process_nOrthogroups = NULL, clean_tempFiles = TRUE,
  write.output = TRUE, outDir = ".",
  file_name = basename(tempfile()), tempDir = file.path(outDir,
  basename(tempfile())))

align_pep(pep.fa, out_msa, mafft.params = "--retree 1 --quiet")

translate_cds(s, as.character_vector = TRUE, remove.improperCDS = TRUE,
  if.fuzzy.codon = "solve")

pipe_alignCDS(cds, protein = NULL, geneIDs = NULL,
  speciesNames = NULL, file_prefix = NULL, orthoDT = NULL,
  orthoDT_row = 1, pal2nal_tool = NULL, orthogroup_columnName = "og",
  if.fuzzy.codon = "solve", outDir_cds = ".", outDir_protein = ".",
  outDir_msa = ".", outDir_codon = ".", n.cores = 6,
  verbose = FALSE)

calc_selectionStats(pep.file, cds.file, geneIDs = NULL, cds.dir = NULL,
  peptide.dir = NULL, tmp.dir, pal2nal.tool)

calc_kaks(codeml.msa.file, tmp.dir)

parse_Codeml(codeml.output.file)

make_codemlCtl(codeml.msa.file, codeml.output.file, codeml.cntr.file)

align_cds(pep.file, cds.file, tmp.dir, pal2nal.tool,
  codeml.msa.file = file.path(tmp.dir, "codon.aln"),
  msa.clu = file.path(tmp.dir, "msa.clu"),
  cds.msa.fa = file.path(tmp.dir, "msa.fa"),
  mafft.params = "--retree 1 --quiet")

pairwise_4dtv(cds.msa.fa)

calc_4dtv(cds.msa, round2digits = 5)

is.transition(base1, base2)

is.transversion(base1, base2)

write_axt(cds.msa.fa, tmp.dir = NULL)
}
\arguments{
\item{cds.msa.fa}{file path to the MSA in fasta format.}

\item{tmp.dir}{file path to temporary directory}

\item{cds.msaFile}{xxx}

\item{GroupID}{xxx}

\item{round2digits}{xxx}

\item{verbose}{logical, should updates be printed?}

\item{base1}{xxx}

\item{base2}{xxx}

\item{proteinFasta_file}{xxx}

\item{orthology_file}{xxx}

\item{orthogroup_columnName}{xxx}

\item{aligner}{xxx}

\item{pal2nal_path}{xxx}

\item{n.cores}{xxx}

\item{process_nOrthogroups}{xxx}

\item{clean_tempFiles}{xxx}

\item{write.output}{xxx}

\item{outDir}{xxx}

\item{file_name}{xxx}

\item{tempDir}{xxx}

\item{msaFile}{xxx}

\item{file_prefix}{xxx}

\item{nSpecies}{xxx}

\item{problem_OrthosFile}{xxx}

\item{cdml_ctlDir}{xxx}

\item{cdmlDir}{xxx}

\item{codeml.output.file}{file path to the codeml output file}

\item{codeml.msa.file}{paml-formatted CDS MSA.}

\item{codeml.cntr.file}{file path to codeml control file}

\item{out_msa}{xxx}

\item{mafft.params}{xxx}

\item{s}{xxx}

\item{as.character_vector}{xxx}

\item{remove.improperCDS}{xxx}

\item{if.fuzzy.codon}{xxx}

\item{cds}{xxx}

\item{protein}{xxx}

\item{geneIDs}{xxx}

\item{speciesNames}{xxx}

\item{orthoDT}{xxx}

\item{orthoDT_row}{xxx}

\item{pal2nal_tool}{xxx}

\item{outDir_cds}{xxx}

\item{outDir_protein}{xxx}

\item{outDir_msa}{xxx}

\item{outDir_codon}{xxx}

\item{pep.file}{file path to peptide fasta file, with the sequences to align}

\item{cds.file}{file path to cds fasta file, with the sequences to align}

\item{pal2nal.tool}{file path to the pal2nal tool, including the executable}

\item{msa.clu}{file path to the clustall-formatted MSA}

\item{cds.msa}{dna StringSet object containing the cds multiple alignment}

\item{outDir}{xxx}

\item{clean_tempFiles}{xxx}

\item{outDir}{xxx}

\item{cdml_file}{xxx}

\item{nSpecies}{xxx}

\item{problem_OrthosFile}{xxx}

\item{group_columnName}{xxx}

\item{file_prefix}{xxx}

\item{orthogroup_columnName}{xxx}

\item{if.fuzzy.codon}{xxx}

\item{aa_file}{xxx}

\item{n.cores}{xxx}

\item{...}{not currently in use}

\item{mafft.params}{parameters to pass to mafft}

\item{base1}{first base (ATCG)}

\item{base2}{second  base (ATCG)}

\item{round2digits}{integer, how many places to round stats to.}

\item{...}{not currently in use}
}
\description{
\code{cds_utils} Five utilities functions meant for internal calls in compareGeneSpace

\code{write_axt} Converts MSA file to AXT format

\code{calculate_4dtv} Calculate 4dtv value for a given pair of
CDS sequences in MSA format

\code{is.transversion} Check for base transversion

\code{is.transition} Check for base transition

\code{pipe_4dtv} Pipline to calculate 4DTV values for paralogs/orthologs
 between species in given orthology file

\code{calculate_kaks} calculate kaks

\code{parse_Codeml} Parse codeml output to obtain dN/dS and other values

\code{make_codemlCtl} Generate codeml input control file

\code{pipe_kaks} Pipline to calculate KaKS values for
orthologs between species in given orthology file

\code{alignAA} Aligns amino acid sequences using multiple sequence aligner, mafft

\code{translate_cds} Translates CDS sequences using Biostrings::translate

\code{pipe_alignCDS} Prepares CDS and AA fasta for alignment

\code{cds_utils} Functions that allow selection stat calculation in GENESPACE

\code{calc_selectionStats} Do alignments and calculate selection stats for
a set of sequences

\code{calc_kaks} Calculate stats from codeml

\code{parse_Codeml} Parse codeml output to obtain dN/dS and other values

\code{make_codemlCtl} make codeml control file

\code{align_cds} call mafft and pal2nal to conduct multiple sequence alignments

\code{pairwise_4dtv} calculate 4-fold stats on msa

\code{calc_4dtv} calculate 4-fold stats

\code{is.transition} Check for base transition

\code{is.transversion} Check for base transversion

\code{write_axt} Converts MSA file to AXT format
}
\note{
\code{cds_utils} is a generic name for the functions documented.
\cr
If called, \code{cds_utils} returns its own arguments.

\code{cds_utils} is a generic name for the functions documented.
\cr
If called, \code{cds_utils} returns its own arguments.
}
\examples{
\dontrun{
calc_selectionStats(pep.file = "~/Downloads/test.pep.fa",
    cds.file = "~/Downloads/test.cds.fa",
    tmp.dir = "/Users/jlovell/Downloads",
    pal2nal.tool = "/Users/jlovell/Documents/comparative_genomics/programs/pal2nal.v14/pal2nal.pl")
}


}
