% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_riparian.R, R/synteny.R
\name{plot_riparian}
\alias{plot_riparian}
\alias{split_blksByRef}
\alias{reorder_gff}
\alias{load_refHits}
\alias{add_synChr2gff}
\alias{read_ripHits}
\alias{calc_refChrByGene}
\alias{add_synOg2gff}
\alias{split_overlaps}
\title{Genespace plotting routines}
\usage{
plot_riparian(
  gsParam,
  plotRegions = FALSE,
  refGenome = NULL,
  genomeIDs = NULL,
  onlyTheseChrs = NULL,
  onlyTheseRegions = NULL,
  excludeChrOutOfRegion = FALSE,
  findRegHitsRecursive = FALSE,
  minGenes2plot = 50,
  braidAlpha = 0.8,
  braidBorderLwd = NULL,
  reorderChrs = TRUE,
  minGenes = 5,
  gapProp = 0.005,
  useOrder = TRUE,
  chrLabCex = 0.5,
  nGenomeLabChar = 20,
  genomeLabCex = 0.75,
  chrBorder = "black",
  chrFill = "white",
  chrRectBuffer = 1.5,
  colByChrs = c("#8B1D00", "#D05100", "#ED9004", "#F9C70E", "#EAE075", "#BAE0DB",
    "#8BEDF9", "#74B8FC", "#4871F9", "#040DC9", "#0E004C", "#5E09A3", "#C054F9",
    "#E6BDFC"),
  labelChrBiggerThan = NULL,
  chrLabFun = function(x) gsub("^0", "", gsub("^chr|^scaffold|^lg|_", "", tolower(x)))
)

split_blksByRef(
  hitsRef,
  hitsRip,
  gff,
  chrd,
  chrl,
  refGenome,
  minrl = 5,
  minprp = 0.9
)

reorder_gff(gff, genomeIDs, minGenesOnChr, refGenome)

load_refHits(gsParam, genomeIDs, refGenome, plotRegions)

add_synChr2gff(gff, refHits, genomeIDs, gapProp, refGenome)

read_ripHits(gsParam, genomeIDs, useBlks)

calc_refChrByGene(gff, refGenome, blkSize, nCores)

add_synOg2gff(gff, hits = NULL, gsParam, genomeIDs, allowRBHinOg, useBlks)

split_overlaps(
  hits,
  dropInterleavesSmallerThan,
  minPropDup = 0.05,
  maxIter = 20,
  verbose
)
}
\arguments{
\item{gsParam}{A list of genespace parameters. This should be created
by setup_genespace, but can be built manually. Must have the following
elements: blast (file.path to the original orthofinder run), synteny (
file.path to the directory where syntenic results are stored), genomeIDs (
character vector of genomeIDs).}

\item{plotRegions}{logical, should regions be plot (and not blocks)?}

\item{refGenome}{single character string specifying which genome is the ref}

\item{genomeIDs}{character vector at least partially matching the genomeIDs
in gsParam}

\item{onlyTheseChrs}{character vector specifying the reference chrs that
should be plot}

\item{minGenes2plot}{integer specifying the minimum number of genes on a
chr to plot}

\item{braidAlpha}{numeric (0-1) specifying the transparence of the braids}

\item{braidBorderLwd}{numeric specifying the weight of borders on the braids}

\item{reorderChrs}{logical, should chromosomes be re-ordered by synteny?}

\item{minGenes}{integer specifying the minimum number of genes on a chr to
plot}

\item{gapProp}{numeric (0-1) specifying the proportional size of gaps
relative to the length of the largest genome}

\item{useOrder}{logical, should gene rank order be used in lieu of physical
positions?}

\item{chrLabCex}{character expansion for the chromosome labels}

\item{genomeLabCex}{chracter expansion of the genome labels}

\item{chrBorder}{character or integer coercible to an R color for the border
of the chromosome regions}

\item{chrFill}{character or integer coercible to an R color for the interior
fill of the chromosome regions}

\item{chrRectBuffer}{number, the amount of buffer around the center of chr
regions.}

\item{colByChrs}{if braids should be colored by reference chromosome,
a vector of colors or integers that is coerced into a color palette. If
no coloring by chr, specify NULL.}

\item{labelChrBiggerThan}{integer specifying the minimum number of genes or
bp to label a chromosome}

\item{chrLabFun}{function to parse chr IDs to make them more readible}

\item{hitsRef}{data.table containing all syn og hits against the reference}

\item{hitsRip}{data.table containing all syn og hits among riparian genomes}

\item{gff}{annotated gff-like data.table}

\item{chrd}{data.table converted chrList}

\item{chrl}{see chrList}

\item{minrl}{minimum run-length of consecutive refChr hits in a block to
warrant splitting.}

\item{minprp}{minimum proportion of hits to a refChr to get a block break}

\item{minGenesOnChr}{integer, specifying the min number of genes a chromosome
that is plotted cna contain}

\item{refHits}{data.table of hits against the reference}

\item{useBlks}{logical, should blocks be used instead of regions?}

\item{blkSize}{integer specifying minimum block size}

\item{nCores}{integer specifying the number of parallel processes to run}

\item{hits}{data.table of hits}

\item{allowRBHinOg}{logical, should RBHs be allowed when constructing
syntenic orthologs?}
}
\description{
\code{plot_riparian} Genespace plotting routines

\code{plot_riparian} Make a riparian plot

\code{split_blksByRef} split_blksByRef

\code{reorder_gff} reorder_gff

\code{load_refHits} load_refHits

\code{add_synChr2gff} vector of points for polygons based on cosine curves

\code{read_ripHits} read_ripHits

\code{calc_refChrByGene} calc_refChrByGene

\code{add_synOg2gff} add_synOg2gff

\code{split_overlaps} split_overlaps
}
\details{
...
}
\note{
\code{plot_riparian} is a generic name for the functions documented.
\cr
If called, \code{plot_riparian} returns its own arguments.
}
