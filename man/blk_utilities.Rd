% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blk_utilities.R, R/mcs_utilities.R,
%   R/rerun_utilities.R
\name{of_utilities}
\alias{of_utilities}
\alias{run_getfasta}
\alias{run_exonerate}
\alias{run_diamondBlastx}
\alias{parse_blastLoc}
\alias{make_blastRegion}
\alias{add_buffer}
\alias{pipe_exonerate}
\alias{prep_mcs}
\alias{parse_mcs}
\alias{run_mcs}
\alias{rerun_utilities}
\alias{subset_blast}
\alias{remake_blast}
\alias{pull_gff}
\alias{read_allBlast}
\alias{make_mapFromOGs}
\alias{make_blockMetadata}
\alias{find_orphans}
\alias{load.annotations}
\title{Orthofinder utility functions}
\usage{
run_getfasta(bed, bed.file, ass.file, fa.file)

run_diamondBlastx(db.file, pep.fa, fa.file, blast.file, n.cores = 1,
  max.target.seqs = 10000, min.score = 20,
  diamond.blastx.param = "--quiet")

parse_blastLoc(bl)

make_blastRegion(bl, max.dist2besthit = 5000)

add_buffer(bl, fais, buffer = 1000)

pipe_exonerate(hit.reg, assembly.dir, stas, genomeIDs, tmp.dir,
  n.cores = 1, min.score = 20, verbose = T)

run_exonerate(ass.fasta.file, pep.fasta.file, bed, min.score = 20,
  tmp.dir)

prep_mcs(blast, gff, mcscan.dir, mcscan.param, silent.mcs)

parse_mcs(mcs.file)

run_mcs(blast, gff, mcscan.dir, mcscan.param, silent.mcs)

subset_blast(blast.file, genenum.list, n.cores, verbose)

remake_blast(blast.dir, cull.blast.dir, genenum.list, n.cores,
  verbose = T)

pull_gff(gff, blk.line, gene.index)

read_allBlast(blast.dir, verbose = T)

make_mapFromOGs(gff.wNum, cull.blast.dir)

make_blockMetadata(cds.md, gffog, blk)

find_orphans(spl.gff, blk.md2, n.cores)

load.annotations(genomeIDs, cds.dir, peptide.dir, assembly.dir)
}
\arguments{
\item{blast.file}{file path for blast output}

\item{n.cores}{number of parallel processes to run}

\item{min.score}{numeric, minimum score for a hit to be retained}

\item{genomeIDs}{character, genome identifiers}

\item{verbose}{logical, should updates be reported?}

\item{blast}{data.table containing blast hits}

\item{gff}{data.table containing the parsed gff annotation data}

\item{mcscan.dir}{character, gff file name and path}

\item{mcscan.param}{character, genome identifiers}

\item{silent.mcs}{character, genome abbreviations}

\item{genenum.list}{list of gene numbers / ids}

\item{blast.dir}{character, directory containing the orthofinder output}

\item{cull.blast.dir}{path for culled blast directory}

\item{blk.line}{one line from a blk object}

\item{gene.index}{gene index from import_ofResults}

\item{gff.wNum}{gff with number and block.id added in}

\item{cds.md}{metadata of cds, including sequence lengths}

\item{gffog}{gff object with orthogroup info}

\item{blk}{data.table containing the block information}

\item{spl.gff}{split gff object}

\item{blk.md2}{simplified block metadata object}

\item{gff.dir}{character, directory containing the gff3 formatted annotation files}

\item{gff.file}{character, gff file name and path}

\item{abbrevs}{character, genome abbreviations}

\item{map}{data.table containing the map information}

\item{ogff}{list of data.tables, split gff by block.}

\item{orthogroups}{orthogroup object from import_ofResults}

\item{MCScanX.params}{character, parameters to be passed to MCScanX}

\item{mcscanx.input.dir}{directory for mcscan temporary files to be stored}

\item{n.mappingWithinRadius}{numeric, number of hits required to be in the radius}

\item{eps.radius}{numeric, size of the radius}

\item{pairs.only}{logical, should only pairs of hits in orthofinder output be retained}

\item{min.propMax}{numeric, minimum proportion of max score for a gene}

\item{max.hitsPerGene}{numeric, maximum number of hits to be retained per gene}

\item{str2drop}{character, string in attribute column of gff file to be dropped}

\item{str2parse}{character, string in attribute column of gff file to use as the separator}

\item{whichAttr}{numeric, which attribute should be returned in the
gff attribute column}

\item{out.dir}{directory where should output be written.}

\item{species.mappings}{the species mapping from parse_orthofinder}

\item{of.speciesIDs}{orthofinder species ids, from parse_orthofinder}

\item{of.geneIDs}{orthofinder gene ids, from parse_orthofinder}

\item{x}{data.table}

\item{f}{factor}

\item{by}{factor}

\item{drop}{drop}

\item{flatten}{non-recursive unlisting}

\item{...}{additional arguments passed to data.table}

\item{blast}{character, directory containing the gff3 formatted annotation files}

\item{gff}{character, directory containing the orthofinder output}

\item{blast.dir}{path for blast directory}

\item{gff}{concatenated, simplified gff object}

\item{gene.index}{gene number / name data.table}

\item{blk}{blk object}

\item{verbose}{should updates be printed?}

\item{...}{not currently in use}
}
\description{
\code{blk_utilities} Several utilities functions meant for internal calls in compareGeneSpace

\code{run_getfasta} Much faster than base split.

\code{run_diamondBlastx} Much faster than base split.

\code{parse_blastLoc} Much faster than base split.

\code{make_blastRegion} Much faster than base split.

\code{add_buffer} Much faster than base split.

\code{pipe_exonerate} Much faster than base split.

\code{run_exonerate} Much faster than base split.

\code{mcs_utilities} Several utilities functions meant for internal calling of MCScanX

\code{prep_mcs} Prep and run MCScanX

\code{parse_mcs} Parse MCScanX output

\code{run_mcs} Run a single instance of MCScanX

\code{rerun_utilities} Several utilities functions meant for internal calls in rerun_orthofinder

\code{subset_blast} Subset blast results.

\code{remake_blast} Subset blasts in new directory

\code{pull_gff} merge gff with gene numbers

\code{read_allBlast} read blast files

\code{make_mapFromOGs} buid gff networks from orthogroups

\code{make_blockMetadata} combine block information with gff of orthogroups

\code{find_orphans} find orphan genes in blocks

\code{load.annotations} load annotation to memory
}
\note{
\code{of_utilities} is a generic name for the functions documented.
\cr
If called, \code{blk_utilities} returns its own arguments.

\code{mcs_utilities} is a generic name for the functions documented.
\cr
If called, \code{mcs_utilities} returns its own arguments.
}
