% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/syntenicOgs.R
\name{syntenicOGs}
\alias{syntenicOGs}
\alias{pull_synOGs}
\alias{add_synOg2gff}
\alias{blkwise_orthofinder}
\alias{count_nBlks}
\alias{read_hits4of}
\alias{run_ofInReg}
\alias{count_ogtypes}
\alias{count_expectn}
\alias{run_ofFromObj}
\title{syntenicOGs}
\usage{
pull_synOGs(gsParam, genomeIDs = NULL)

add_synOg2gff(gff, hits = NULL, gsParam, genomeIDs, allowRBHinOg, useBlks)

blkwise_orthofinder(
  gsParam,
  gff,
  genomeIDs = NULL,
  minGenes4of = 40,
  verbose = NULL
)

count_nBlks(gsParam, genomeIDs, minGenes4of)

read_hits4of(gsParam, genome1, genome2)

run_ofInReg(gsParam, genome1, genome2, blks, gff, pepspl)

count_ogtypes(gff, hits)

count_expectn(hits, gff)

run_ofFromObj(blast00, blast01, blast10, blast11, pep0, pep1, writeDir)
}
\arguments{
\item{gsParam}{a list containing all parameters for a GENESPACE run. See
init_genespace}

\item{genomeIDs}{an optional vector of genomeIDs to consider. If not
specified (default) taken from gsParam$genomeIDs$genomeIDs}

\item{gff}{annotated gff with orthogroups included, see read_gff}

\item{hits}{data.table containing annotated blast-format pairwise hits}

\item{verbose}{logical, should updates be printed to the console?}

\item{genome1}{character string specifying first of two genomeIDs}

\item{genome2}{character string specifying second of two genomeIDs}

\item{blks}{data.table containing the block coordinates}

\item{radius}{numeric of length 1 specifying the eps dbscan parameter; the
search radius within which to count clustered density-based xy points.}

\item{blkSize}{integer of length 1 specifying the minimum size for a syntenic
block and the -s 'size' MCScanX parameter}

\item{nCores}{integer of length 1 specifying the number of parallel processes
to run}

\item{minRbhScore}{integer of length 1, see set_syntenyParams}

\item{synBuff}{integer of length 1 specifying the maximum euclidean distance
from an 'anchor' so that it can be considered syntenic}

\item{selfOnly}{logical, should only self hits be considered}

\item{overwrite}{logical, should the results be overwrittem?}

\item{maskHits}{data.table of hits that should be excluded}

\item{synParam}{data.table with synteny parameters. See set_syntenyParams.}

\item{selfRegionMask}{integer, the radius around self hits that should be
masked}

\item{type}{either 'primary' or 'secondary' depending on the scale of
inference}

\item{dropInterleavesSmallerThan}{integer, the minimum block size to retain
after splitting overlapping blocks}

\item{minPropDup}{numeric (0-1) specifying the minimum proportion of
duplicated hits to allow two overlapping blocks to not be split}

\item{maxIter}{integer, the maximum number of block splitting interations}

\item{nhits}{integer, the number of hits to retain}
}
\value{
a 'hits' data.table for a pairwise combination of genomes.
}
\description{
\code{syntenicOGs} syntenicOGs

\code{pull_synOGs} pull_synOGs

\code{add_synOg2gff} add_synOg2gff

\code{blkwise_orthofinder} blkwise_orthofinder

\code{count_nBlks} Gcount_nBlks

\code{read_hits4of} read_hits4of

\code{run_ofInReg} run_ofInReg

\code{count_ogtypes} count_ogtypes

\code{count_expectn} count_expectn

\code{run_ofFromObj} run_ofFromObj
}
\details{
The main engine for GENESPACE synteny searching. This
finds syntenic 'anchors' that are high-confidence synteny- and homology-
constrained hits, then pulls nearby hits within a specified buffer around
'anchor' hits between two genomes. Combined, this provides a framework to
both analyze syntenic duplicates (e.g. tandem arrays) and have high
confidence that only the desired types of hits (orthologs, homoeologs, etc.)
are considered.

The basic premise is that we can find synteny in haploid genome comparisons (most
diploid species have haploid genome representations) best by first
constraining the initial search to the single best scoring pairwise hits for
each gene. Then, if desired further subsetting this set to only gene pairs
that fall into the same orthogroups. This approach effectively removes
relic syntenic regions from ancient whole genome duplications and produces
a set of high-confidence synteny "anchors" which serve as known positions of
syntenic (ortho/para/homeolo)gous regions. We then search in a fixed-radius
for nearest neighbors within a gene-rank order buffer around the anchors. For
intra-genomic hits, the self hits are the anchors and a buffer is calculated
via euclidean distance. For intra-genomic hits in polyploids, the self-hit
regions are masked and the synteny search is re-run to more effectively find
homeologs.

It is important to note that this does NOT produce finalized block
coordinates, but only large-scale regions that are syntenic. These results
are usually passed to an additional orthofinder run, either globally, or for
polyploids or searches with paralogs, within-block pairwise runs. See
rerun_orthofinder.

Parameterization of this function is complex and varies by the type of
contrast desired. To simplify parameterization, we have build a convenience
function that infers various parameters based on basic
genespace parameters and ploidy. Set set_syntenyParams for more information
about the input synParam data.table.
}
\examples{
\dontrun{
# coming soon
}

}
