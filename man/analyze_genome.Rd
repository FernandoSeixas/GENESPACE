% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analyze_genome.R
\name{analyze_genome}
\alias{analyze_genome}
\alias{kmerize_fa}
\alias{find_kmer}
\alias{slide_genome}
\title{Sliding window and kmer exploration of genomes}
\usage{
kmerize_fa(path2fasta, kmerSize)

find_kmer(
  path2fasta,
  kmers,
  nCores = 1,
  revComp = TRUE,
  minSize2batch = 50,
  verbose = TRUE
)

slide_genome(path2fasta, bedObj, step, size, nCores = 1)
}
\arguments{
\item{path2fasta}{file.path to a fast file}

\item{kmerSize}{integer of length 1, specifying the size of the kmer to use}

\item{kmers}{character vector of kmers to search for}

\item{nCores}{integer of length 1, specifying the number of parallel
processes to run}

\item{revComp}{logical, should the kmers be reverse completemented too?}

\item{minSize2batch}{integer of length 1, specifying how many kmers should
be run in a single batch}

\item{verbose}{logical, should updates be printed to the console?}

\item{bedObj}{data.table or data.frame with chr, start, end columns}

\item{step}{integer of length 1, specifying the distance between adjacent
windows in bps.}

\item{size}{integer of length 1, specifying sliding window size in bps.}
}
\value{
...
}
\description{
\code{analyze_genome} Sliding window and kmer exploration of genomes. The
scripts here are not integrated into the primary GENESPACE pipeline;
however, we find that these methods, namely fast physically anchored
sliding windows and kmer extract (e.g. to find centromeres & telomeres) are
often accomplished on GENESPACE output data or plot_riparian coordinate
systems. Thus we distribute these functins along with the main script engine.

\code{kmerize_fa} Takes a path to a single-entry fasta file and splits it
into all unique strings (kmers) of a specified size. Exact matches for these
kmers is very fast. Thus, this approach offers a quick-and-dirty method to
find sequences in a set of large fasta files (like genome assemblies).

\code{find_kmer} Takes a vector of kmers and a path to a (potentially multi)
sequence fasta file and finds the genomic coordinates of all kmers.

\code{slide_genome} Implemented as overlapping interval joins for data.table
foverlaps, this calculates the percent of a given window that is occupied
by an interval in a specified bed file. Useful for calculating %genic or
%repeat across the genome, tabulating the proportion of windows containing
a specific kmer (e.g. telomere) or similar.
}
\details{
...
}
\note{
\code{analyze_genome} is a generic name for the functions documented.
\cr
If called, \code{analyze_genome} returns its own arguments.
}
\examples{
\dontrun{
teloKmer <- c("CCCGAAA", "CCCTAAA")
teloLoc <- find_kmer(
  kmers = teloKmer,
  path2fasta = fallaxFa)
swtelo <- slide_genome(
  path2fasta = fallaxFa,
  windowSize = 5e3,
  stepSize = 500,
  bedObj = teloLoc)
ggplot(subset(swtelo$sw, grepl("LG", chr)), aes(x = Mbp, y = prop))+
  geom_line()+facet_wrap(~chr)
}

}
