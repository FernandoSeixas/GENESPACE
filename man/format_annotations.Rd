% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match_gffFasta.R
\name{format_annotations}
\alias{format_annotations}
\alias{parse_phyotozome}
\alias{parse_ncbi}
\alias{match_gffFasta}
\alias{parse_gff}
\alias{parse_faHeader}
\title{Functions to convert from raw to genespace annotation formats}
\usage{
parse_phyotozome(gsParam, overwrite = F, genomeIDs = NULL)

parse_ncbi(gsParam, overwrite = F, genomeIDs = NULL)

match_gffFasta(
  genomeIDs,
  path2rawGff3,
  path2rawPeptide,
  path2gff = file.path(getwd(), "genome", "gff", paste0(genomeIDs, ".gff.gz")),
  path2peptide = file.path(getwd(), "genome", "peptide", paste0(genomeIDs, ".fa.gz")),
  gffEntryType = "gene",
  gffIdColumn = "Name",
  headerEntryIndex = 4,
  headerSep = " ",
  headerStripText = "locus=",
  overwrite = FALSE,
  troubleshoot = FALSE,
  verbose = TRUE,
  nCores = detectCores()/2
)

parse_gff(
  path2rawGff3,
  gffEntryType,
  gffIdColumn,
  verbose = TRUE,
  troubleshoot = FALSE
)

parse_faHeader(
  path2rawFasta,
  headerEntryIndex,
  headerSep,
  headerStripText,
  verbose = TRUE,
  troubleshoot = FALSE
)
}
\arguments{
\item{overwrite}{logical, should existing files be overwritten? If FALSE,
and all files are present, just returns a named vector of gff/pep file
locations}

\item{genomeIDs}{character vector of the same length as paths. Names for
each genome.}

\item{path2rawGff3}{character vector coercible to file.paths. This points to
the raw gff3-formatted annotation (.gz or gff3)}

\item{path2rawPeptide}{character vector coercible to a file.path. This points
to the raw fasta-formatted primary peptide annotation.}

\item{path2gff}{character vector coercible to file.paths. This points to
the location to save the parsed gff3-like file (.gz or gff3)}

\item{path2peptide}{character vector coercible to a file.path. This points
to location to save the re-named fasta-formatted primary peptide annotation.}

\item{gffEntryType}{character, specifying which attribute type should be
retained. This is the 3rd column of a gff3-formatted annotation. Can be a
vector of length 1, if all files should be parsed identically, or a vector
with the same length as file paths and genomeIDs, specifying different
parsing parameters for each genome.}

\item{gffIdColumn}{character, specifying the field name in the gff3
attributes column.Can be a vector of length 1, if all files should be parsed
identically, or a vector with the same length as file paths and genomeIDs,
specifying different parsing parameters for each genome.}

\item{headerEntryIndex}{integer specifying the field index in the fasta
header which contains the gene ID information to match with the gff. Can be a
vector of length 1, if all files should be parsed identically, or a vector
with the same length as file paths and genomeIDs, specifying different
parsing parameters for each genome.}

\item{headerSep}{character used as a field delimiter in the fasta header.
Can be a
vector of length 1, if all files should be parsed identically, or a vector
with the same length as file paths and genomeIDs, specifying different
parsing parameters for each genome.}

\item{headerStripText}{character or regex to remove from the fasta header.
Can be a vector of length 1, if all files should be parsed identically,
or a vector with the same length as file paths and genomeIDs, specifying
different parsing parameters for each genome.}

\item{troubleshoot}{logical, should the raw and parsed files be printed?}

\item{verbose}{logical, should updates be printed to the console?}

\item{nCores}{integer of length 1 specifying the number of parallel processes
to run}

\item{path2rawFasta}{character string coercible to a file path, pointing to
the location of the unparsed fasta file.}
}
\description{
\code{format_annotations} Format gff and fasta for genespace. The two parse
functions (parse_gff & parse_faHeader) take a single file and return a
formatted R object. format_annotations is a wrapper for these two that reads
and writes the full genespace-formatted files.

\code{parse_phyotozome} parse phytozome-formatted annotations

\code{parse_ncbi} parse NCBI-formatted annotations

\code{match_gffFasta} parse fasta headers and gff3 attributes

\code{parse_gff} parse the gff3-formatted annotation into genespace-readable
data.table/csv file. This has a unique ID for each gene that matches the
fasta annotation entries exactly.

\code{parse_faHeader} parse fasta headers to gene gff entries
}
\note{
\code{format_annotations} is a generic name for the functions documented.
\cr
If called, \code{format_annotations} returns its own arguments.
}
