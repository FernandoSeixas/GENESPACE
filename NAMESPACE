# Generated by roxygen2: do not edit by hand

export(add_alpha)
export(add_gap)
export(add_orthology)
export(annotate_riparian)
export(build_globalBlocks)
export(build_synBlocks)
export(calc_linearCoord)
export(check_env)
export(clean_blocks)
export(clean_it)
export(convert_genomes)
export(convert_gff2coords)
export(cos_y)
export(cull_blast2MapChr)
export(cull_blast2NewIds)
export(cull_blastByScore)
export(cull_syntenicBlast)
export(draw_blkPolygon)
export(draw_genePolygon)
export(drop_mapDup)
export(extend_blk2chrend)
export(extend_blocks)
export(extract_seqIDs)
export(find_adjBlks1)
export(find_adjBlks2)
export(find_blocksToExtend)
export(find_hitsInBuffer)
export(find_leftBlk)
export(find_rightBlk)
export(find_synOrthos)
export(find_whichInBuffer)
export(format_gffChrlist)
export(format_mapChrlist)
export(genespace_pal)
export(get_xClus)
export(import_gff)
export(import_ofResults)
export(label_riparian)
export(make_blocks)
export(make_fais)
export(make_mapDB)
export(make_newOFdb)
export(make_polygon)
export(match_synChrs)
export(merge_ofGff)
export(mirror_blast)
export(parse_fastaHeader)
export(parse_gff)
export(parse_mcs)
export(pipe_mcscanx)
export(plot_circos)
export(plot_map)
export(plot_riparian)
export(prep_mcs)
export(pull_duplicatesInChr)
export(pull_nonSynOrthos)
export(pull_orthoNet)
export(pull_synHomos)
export(readRename_blastGenes)
export(read_allBlasts)
export(read_geneIDs)
export(read_ogs)
export(read_speciesIDs)
export(remake_ofInput)
export(rerank_fromIDs)
export(rerun_pairwiseOF)
export(round_toAny)
export(run_dbs)
export(run_mcs)
export(run_of)
export(run_orthofinder)
export(simplify_map)
export(track_blocks)
export(write_ofBlast)
export(write_ofData)
import(data.table)
importFrom(Biostrings,readAAStringSet)
importFrom(Biostrings,readDNAStringSet)
importFrom(Biostrings,writeXStringSet)
importFrom(dbscan,dbscan)
importFrom(dbscan,frNN)
importFrom(grDevices,col2rgb)
importFrom(grDevices,colorRampPalette)
importFrom(grDevices,rainbow)
importFrom(grDevices,rgb)
importFrom(graphics,polygon)
importFrom(parallel,mclapply)
importFrom(utils,combn)
